'.text.html, .text.html .meta.scope.between-tag-pair, .text.html .punctuation.tag.begin, text.html.php .meta.tag.inline.any.html':

# Security
    'Check Security':
        'prefix':'sec'
        'body': "$app->sbSec->ob->sec${1:Check}('${2:}', '${3:}', '${4:*}')$5"
    'Userlite Admin Security':
        'prefix':'sysadmin'
        'body':'$$1app->lite->user->sbSec->sysadmin$2'
    'Action Security':
        'prefix':'secAction'
        'body':"$app->sbSec->ob->action('${1:settings}');"
    'Assign Security Page':
        'prefix':'secAssignPage'
        'body':"$app->sbSec->ob->page('${1:settings}');"

# Navigation
    'Rnd Hash':
        'prefix':'rnd'
        'body':'hFrag.click({${1:settings}:{rnd:Math.floor(Math.random() * 9999)}});${2: return false;}'
    'UL Link Item':
        'prefix':'ulink'
        'body':"$links['${1:promotions}'] = [\n\t't'=>'${2:Promotions}',\n];$3"
    'Start Navigation':
        'prefix':'nav-start'
        'body':'<div class="xHeadNav">\n\t<div class="container">\n\t\t<div class="xHeadRight">\n\t\t\t<a title="App Settings" onclick="<?php echo $xPage->hfLink(\'mod::p:settings|n:app\', \'click\', [\'only\' => 1]); ?>; return false;" href="#"><i class="ulicon-settings"></i></a> &nbsp;\n\t\t\t<a title="We need your feedback for this app!" href="/concerto/ent/<?php echo $app->id; ?>"><i class="ulicon-message"></i></a>\n\t\t</div>\n\t <div class="xHeadTitle">\n\t\t\t<span class="xHeadBreadcrumb app-title">\n\t<?php echo $app->instance->rec->data[\'title\']; ?>\n\t\t\t</span>\n\t\t</div>\n\t\t<div class="xHeadTabs">\n\t\t\t<div class="xHeadTabsLeft">\n\t\t\t\t<?php\n\n\t$links = array();\n\n\t$links[\'${1:template_items}\'] = [\n\t\t\t\t\t\'t\' => \'${2:Template Items}\',\n\t];\n\n\t$app->sbNav->links(\n\t\tarray(\n\t\t\t\'name\' => \'${3:start}\',\n\t\t\t\'mod\' => \'${3:start}\',\n\t\t\t\'links\' => $links,\n\t\t)\n\t);\n\t?>\n \n\t\t\t</div>\n\t\t</div>\n\t</div>\n </div>\n \n<?php\n$app->sbNav->sec(array(\n\t\'name\'=>\'${3:start}\',\n\t\'click\'=>\'${3:start}::n:${3:start}|p:\'.key($links),\n));$4'
    'Sub Navigation Tabs':
        'prefix':'navtabs'
        'body':'<div class="xToolbar">\n\t<div class="container">\n\t\t<div class="xToolbarIn">\n\t\t\t<div class="xToolbarMenu">\n\n\t\t\t\t<?php\n\n\t\t\t\t$links = array();\n\n\t\t\t\t$links[\'${1:training}\'] = [\n\t\t\t\t\t\'t\'=>\'${2:Training}\',\n\t\t\t\t];\n\n\t\t\t\t$app->sbNav->links(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t\'name\'=>\'${4:settings}\',\n\t\t\t\t\t\t\'mod\'=>\'${3:employee}\',\n\t\t\t\t\t\t\'links\'=>$links,\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t?>\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<?php\n\n$app->sbNav->sec([\n\t\'name\'=>\'${4:settings}\',\n\t\'effect\'=>true,\n\t\'click\'=>\'${4:settings}::n:${3:employee}|p:\'.key($links),\n]);\n$5'
    'Vars Add':
        'prefix':'vars add'
        'body':"'varsadd'=>'|${1:t}:|${2:month}:'"
    'Reload Button':
        'prefix':'reloadb'
        'body':'<b><input type="button" name="reload" value="Reload" class="btn btn-danger btn-sm" onclick="hFrag.click({${1:settings}:{rnd:Math.floor(Math.random() * 9999)}});" style="z-index: 12313145; position:fixed; top:30px; right: 10px;"></b>$2'

# Modals
    'Modal Form':
        'prefix':'modalform'
        'body':'<form id="formDialog" role="form" action="" method="" onsubmit="return false;">${2:\n\t<div class="xulbox_content_nav dialogDeleteToggle">\n\t\t<div class="xulbox_content_nav_title">\n\t\t\t<b><?php echo $${1:integration}->data[\'title\']; ?></b>\n\t\t</div>\n\t</div>}\n\n\t<div class="xulbox_content_box">\n\t\t<div class="xulbox_content_box_in dialogDeleteToggle">\n\n\t\t\t<div id="formDialogValidate"></div>\n\n\t\t\t$4\n\n\t\t</div>\n\n\n\t\t<div class="alert alert-danger dialogDeleteToggle" style="display: none;">\n\n\t\t\t<div  id="dialogDeleteValidate"></div>\n\n\t\t\t<p>\n\t\t\t\tAre you sure you want to delete this ${1:integration}:\n\t\t\t\t<br>\n\t\t\t\t<b><?php echo $${1:integration}->data[\'title\']; ?></b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<button type="button" onclick="this.blur(); hFrag.xAjax(\'\',\'mods/${3:form/${1:integration}s}/action.ajx?action=delete&${1:integration}=<?php echo urlencode(xStdFx::gv(\'${1:integration}\')); ?>\',\'dialogDeleteValidate\');" class="btn btn-danger">Delete</button>\n\t\t\t\t<button type="button" class="btn btn-default" onclick="$(\'.dialogDeleteToggle\').toggle(); xulBoxAuto();">Cancel</button>\n\t\t\t</p>\n\t\t</div>\n\n\n\t</div>\n\t<div class="xulbox_content_nav dialogDeleteToggle">\n\t\t<div class="xulbox_content_nav_toolbar">\n\t\t\t<div>\n\n\t\t\t\t<button\n\t\t\t\t\tonclick="hFrag.xAjax(\'\',\'mods/${3:form/${1:integration}s}/action.ajx?action=update&${1:integration}=<?php echo urlencode(xStdFx::gv(\'${1:integration}\')); ?>\',\'formDialogValidate\',\'formDialog\');"\n\t\t\t\t\ttype="submit"\n\t\t\t\t\tclass="btn btn-primary"\n\t\t\t\t\t>\n\t\t\t\t\t<b>Continue</b>\n\t\t\t\t</button>\n\n\n\t\t\t\t<button class="btn btn-default dialogDeleteToggle " onclick="$(\'.dialogDeleteToggle\').toggle();">\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\n\n\t\t\t\t<button type="button" onclick="appLb.close();" class="btn btn-default usl-auto-escape">Cancel</button>\n\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</form>'
    'Modal Link':
        'prefix':'modallink'
        'body':'<a onclick="appLb.open({location:\'mods/${1:start/modules/edit_settings}.ajx?${2:module}=<?php echo $app->v->${2:module}->id; ?>\'}); return false;" href="#"><input type="button" name="${3:Edit}" value="${3:Edit}" class="btn btn-default"></a>${4:appLb.close();}'

# Slices
    'Website HTML':
        'prefix':'webh'
        'body':'<div class="container usl-pad-md">\n\t<div class="row">\n\t\t{{#first main}}\n\t\t\t<div class="col-sm-12">\n\t\t\t\t{{{content}}}\n\t\t\t</div>\n\t\t{{/first}}\n\t</div>\n\t<div class="row">\n\t\t{{#each ${1:settings}}}\n\t\t\t<div class="col-sm-4">\n\t\t\t\t<h3>{{title}}</h3>\n\t\t\t\t<img src="{{cdnimage image \'maxD_600\'}}" alt="" class="img-responsive" />\n\t\t\t</div>\n\t\t{{/each}}\n\t</div>\n</div>$2'

# Logic
    'If Close PHP Tags':
        'prefix':'ifp'
        'body':'if (${1:condition}) { ?>\n\t$2\n<?php }'
    'Else Close PHP Tags':
        'prefix':'elsep'
        'body':'else {$1 ?>\n\t$2\n<?php }'

# CSS and Style
    'Script Tag':
        'prefix':'js'
        'body':'<script type="text/javascript">\n\n\t$1\n\n</script>'
    'App Dot':
        'prefix':'appdot'
        'body':'<td style="width:1%;">\n\t<?php\n\t\t$color = \'gray\';\n\n\t\tif ($${1:listingItem}[\'${2:state}\'] == 1) {\n\t\t\t$color = \'good\';\n\t\t}\n\n\t\tif ($${1:listingItem}[\'${2:state}\'] == 2) {\n\t\t\t$color = \'warning\';\n\t\t}\n\n\t\tif ($${1:listingItem}[\'${2:state}\'] == 3) {\n\t\t\t$color = \'danger\';\n\t\t}\n\n\t?>\n\t<span class="app-dot usl-bg-<?php echo $color; ?>"></span>\n</td>$3'
    'App Dot Style':
        'prefix':'appdotstyle'
        'body':'.app-dot {\n\tdisplay: inline-block;\n\twidth: 1em;\n\theight: 1em;\n\tborder-radius: 1em;\n\tmargin-top:.15em;\n}'
    'UL Icon':
        'prefix':'ulicon'
        'body':'<i class="ulicon-${1:check} usl-c-${2:good}"></i>'

# Bootstrap/HTML
    'Small HR':
        'prefix':'hrs'
        'body':'<hr class="usl-sm">$1'
    'Bootstrap Table':
        'prefix':'table'
        'body':'<table class="table">\n\t$1\n</table>'
    'Button':
        'prefix':'button'
        'body':'<button name="${1:name}" class="btn btn-${2:default}" onclick="$4">$3</button>'
    'Container with Row':
        'prefix':'container'
        'body':"""<div class="container usl-pad-md">
            ${1:<div class="row">
                <div class="col-sm-${2:6}">
                    $3
                </div>
            </div>}
        </div>"""
    'Table Header':
        'prefix':'th'
        'body':'<th>\n\t$1\n</th>$2'

# Data Structure
    'Field':
        'prefix':'field'
        'body': "$fields['${1:description}'] = [\n\t'title'=>'${2:Description}',\n\t'req'=>${3:false},\n\t'max'=>${4:255},\n\t'format'=>'$5',\n\t'saveTo'=>[${6:\n\t\t'sql',}\n\t\t'sdb',\n\t],\n];$7"
    'Encrypted Field':
        'prefix':'fieldev'
        'body':'$fields[\'${1:card_code}\'] = [\n\t\'title\'=>\'${2:Card Code}\',\n\t\'req\'=>${3:false},\n\t\'encrypt\'=>${4:true},\n\t\'encryptSalt\'=>${5:$this->app->lite->site->salt},\n\t\'max\'=>${6:255},\n\t\'format\'=>\'\',\n\t\'saveTo\'=>[\n\t\t\'sdb\',\n\t],\n];$7'
    'Field Type':
        'prefix':'ftype'
        'body':"\n'${1:url}'=>[\n\t'type'=>'data',${2:\n\t'default'=>'${3:0}',}\n],$4"

# Forms
    'Form':
        'prefix':'form'
        'body':'<form id="${1:formMain}" role="form" action="" method="" onsubmit="return false;">\n\t\n\t$8\n\t\n\t<div class="">\n\t\n\t\t<div id="${1:formMain}Validate"></div>\n\t\t<button onclick="hFrag.xAjax(\'\',\'${2:mods/${3:start}/action.ajx?action=$4}\', \'${5:${1:formMain}Validate}\', \'${1:formMain}\');" type="submit" class="btn btn-primary">\n\t\t\t<b>${6:Save &amp; Continue}</b>\n\t\t</button>${7:\n\t\t\n\t\t<button type="button" onclick="history.go(-1);" class="btn btn-default">Cancel</button>}\n\t\t\n\t</div>\n\t\n</form>'
    'Form Group':
        'prefix':'fg'
        'body': '<div class="form-group">\n\t<label for="fld_${1:title}">${2:Title}</label>\n\t<input type="text" name="fld_${1:title}" value="${3:<?php echo $${4:app->v->${5:item}->rec->data}[\'${1:title}\']; ?>}" class="form-control" />\n</div>$6'
    'Form Group Textarea':
        'prefix':'fgt'
        'body': '<div class="form-group">\n\t<label for="fld_${1:title}">${2:Title}</label>\n\t<textarea name="fld_${1:title}" rows="4" class="form-control">${3:<?php echo $${4:app->v->${5:item}->rec->data}[\'${1:title}\']; ?>}</textarea>\n</div>$6'
    'Form Group CheckBox':
        'prefix':'fgc'
        'body': '<label>\n\t<input ${1:<?php echo ${2:$selected} ? \' checked \' : \'\'; ?> }type="checkbox" name="fld_<?php echo ${3:$fieldKey}; ?>" /> <?php echo ${4:$field[\'title\']}; ?>\n</label>$5'
    'Form Group Placeholder':
        'prefix':'fgp'
        'body':'<div class="form-group">\n\t<input type="text" name="fld_${1:name_first}" value="<?php echo $app->v->${2:item}->rec->data[\'${1:name_first}\']; ?>" class="form-control" placeholder="${3:Item Name}" />\n</div>$4'
    'Form Group Select':
        'prefix':'fgs'
        'body': '<div class="form-group">\n\t<label for="fld_${1:terms}">${2:Terms}</label>\n\t<select class="form-control" name="fld_${1:terms}">${3:\n\t\t<option value="${4:0}">Select ${2:terms}...</option>}\n\t\t<?php ${6:\n\t\t\t${5:$options} = [\n\t\t\t\t\'0\'=>[\n\t\t\t\t\t\'title\'=>\'No\',\n\t\t\t\t],\n\t\t\t\t\'1\'=>[\n\t\t\t\t\t\'title\'=>\'Yes\',\n\t\t\t\t],\n\t\t\t];\n\n\t\t\t}foreach (${5:$options} as $${1:terms}Key => $${1:terms}) { ?>\n\t\t\t\t<option ${7:<?php echo $app->v->${8:item}->rec->data[\'${1:terms}\'] == $${1:terms}Key ? \' selected \' : \'\'; ?> }value="<?php echo $${1:terms}Key; ?>"><?php echo $${1:terms}[\'title\']; ?></option>\n\t\t<?php } ?>\n\t</select>\n</div>$9'

# Upload Form and Actions
    'USL Upload Form':
        'prefix':'upload_form'
        'body':'<?php $formId = $app->lite->sbUpload->make([\'types\'=>\'txt,js\']); ?>\n<div id="${1:image}Cont_<?php echo $formId; ?>"></div>\n\n<form id="${1:image}Form_<?php echo $formId; ?>" name="${1:image}Form_<?php echo $formId; ?>" method="POST" action="#" onsubmit="return false;">\n\t<input type="hidden" id="fld_form_${1:image}_<?php echo $formId; ?>" name="fld_files" value="x" />\n</form>\n\n<script type="text/javascript">\n\tfunction usl_upload_Process_<?php echo $formId; ?>(pxData) {\n\t\t$(\'#fld_form_${1:image}_<?php echo $formId; ?>\').val(pxData);\n\t\thFrag.xAjax(\'\',\'mods/${2:start/settings}/action.ajx?action=upload\', \'${1:image}Cont_<?php echo $formId; ?>\', \'${1:image}Form_<?php echo $formId; ?>\');\n\t}\n</script>$3'
    'Upload Action Step':
        'prefix':'uploadaction'
        'body':'####----------------------------------------------------------------------------\n#### upload\n####----------------------------------------------------------------------------\nif ($action==\'upload\') {\n\n\txRepAction(\n\t\t\'${1:module}/upload/submit\'\n\t);\n\n\t$response = ${2:$app->v->${3:${1:module}}->upload}(xStdFx::pv(\'fld_files\',\'nocheck\'));\n\n\t\if ($response->valid) {\n\n\t\txRepAction(\n\t\t\t\'${1:module}/upload/submit\',\n\t\t\t\'${1:module}/upload/complete\'\n\t\t);\n\n\t\t?>\n\t\t<div class="alert alert-success">\n\t\t\t<b>Done!</b>  Loading the next step...\n\t\t</div>\n\t\t<script type="text/javascript">\n\t\t\tusl_alerts_fade();\n\t\t\thFrag.click({settings:{rnd:Math.floor(Math.random() * 9999)}});\n\t\t</script>\n\t\t<?php\n\n\t} else {\n\t\techo $response->probsShow();\n\t}\n}$4'
    'Upload Method':
        'prefix':'fn_upload'
        'body':'####----------------------------------------------------------------------------\n#### upload\n####----------------------------------------------------------------------------\n\npublic function upload($pxData, $pxOptions = array()) {\n\n\t$location = $this->app->lite->sbUpload->fileMoveData($pxData);\n\n\treturn $this->update([\n\t\t\'${1:file_path}\'=>$location\n\t]);\n\n}$2'

# SQL
    'wheres[]':
        'prefix':'wheres'
        'body':"""$wheres = [
                'status'=>1,
                'site'=>$this->app->lite->siteId,
                'page'=>$this->app->lite->pageId,
            ];
            WHERE ".$this->dbCon->sqlParts($wheres, 'AND')."$1"""
    'Sets[]':
        'prefix':'sets'
        'body':"""$sets = [
                    'status'=>1,
                    'site'=>$this->app->lite->siteId,
                    'page'=>$this->app->lite->pageId,
                    'created'=>$this->app->lite->site->nowDts,
                    'created_gmt'=>$this->app->lite->gmtDts,
                    'updated'=>$this->app->lite->site->nowDts,
                    'updated_gmt'=>$this->app->lite->gmtDts,
                ];
                SET ".$this->dbCon->sqlParts($sets, ',')."$1"""
    'SQL String':
        'prefix':'sql'
        'body': '$sqlString = "\n\t${1:SELECT} $2\n\t";'
    'Query':
        'prefix':'query'
        'body': '$this->dbCon->${1:getRowsId}(${2:$sqlString});$3'
    'JOIN SQL':
        'prefix':'join'
        'body':'JOIN ${1:table_name}\nON ${1:table_name}.$2 = ${3:table_2}.$2$4'
    'DB Escape':
        'prefix':'esc'
        'body':'$this->dbCon->esc($1)$2'

# Action Steps
    'Action Step':
        'prefix':'actionstep'
        'body':'####----------------------------------------------------------------------------\n#### ${1:update}\n####----------------------------------------------------------------------------\nif ($action==\'${1:update}\') {\n\n\txRepAction(\n\t\t\'${2:module/settings/update}/submit\'\n\t);\n\n\t$response = ${3:$app->v->${4:module}->${1:update}}(xStdFx::fieldsToArray());\n\n\t\if ($response->valid) {\n\n\t\txRepAction(\n\t\t\t\'${2:module/settings/update}/submit\',\n\t\t\t\'${2:module/settings/update}/complete\'\n\t\t);\n\n\t\t?>\n\t\t<div class="alert alert-success">\n\t\t\t<b>Changes saved.</b>\n\t\t</div>\n\t\t<script type="text/javascript">\n\t\t\tusl_alerts_fade();\n\t\t</script>\n\t\t<?php\n\n\t} else {\n\t\techo $response->probsShow();\n\t}\n}$5'
    'Simple Action Step':
        'prefix':'simpleaction'
        'body':'####----------------------------------------------------------------------------\n#### ${1:order}\n####----------------------------------------------------------------------------\nif ($action==\'${1:order}\') {\n\n\txLogAction(\'${3:recipe/ingredients/sort}\');\n\n\t$app->v->${2:recipe}->${1:order}(xStdFx::gv(\'${4:fld_order}\'));\n\n}$5'
    'Batch Action':
        'prefix':'action_batch'
        'body':"""####----------------------------------------------------------------------------
            #### renotifyAll
            ####----------------------------------------------------------------------------
            if ($action=='renotifyAll') {

                xRepAction(
                    '${1:sessions}/renotifyAll/chunk'
                );

                $response = $app->${2:sbProcess->renotifyAllOrders}(xStdFx::gv('chunk_index'));

                if (!$response['complete']) {
                    ?>
                        <div class="progress">
                            <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="<?php echo $response['progress']; ?>" aria-valuemin="0" aria-valuemax="100" style="width: <?php echo $response['progress']; ?>%">
                                Batch <?php echo $response['chunk_index'] ?> of <?php echo $response['total']; ?>
                            </div>
                        </div>
                        <script type="text/javascript">
                            hFrag.xAjax('', 'mods/${3:start/settings}/action.ajx?action=renotifyAll&chunk_index=<?php echo $response['chunk_index']; ?>', 'refreshing-data');
                        </script>

                    <?php
                } else {
                    ?>
                        <div class="progress">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                                Processing Complete
                            </div>
                        </div>
                        <script type="text/javascript">
                            setTimeout(function(){
                                hFrag.click({settings:{rnd:Math.floor(Math.random() * 9999)}});
                            },1500);
                        </script>

                    <?php
                }

            }$4"""
    'Batch Action Button':
        'prefix':'button_batch_action'
        'body':"""<div id="refreshing-data"> </div>
            <button name="recalc" class="btn btn-default btn-sm" onclick="hFrag.xAjax('', 'mods/${1:start/settings}/action.ajx?action=renotifyAll', 'refreshing-data', '');">${2:Renotify All Sessions}</button>"""
    'Batch Action Function':
        'prefix':'fn_batch_action'
        'body':"""####------------------------------------------------------------------------
            #### renotifyAllOrder
            ####------------------------------------------------------------------------

            public function renotifyAllOrders($chunkIndex, $pxOptions = array()) {

                if (!$chunkIndex) {
                    $chunkIndex = 0;
                }

                $wheres = [
                    'status'=>2,
                    'site'=>$this->app->lite->siteId,
                    'page'=>$this->app->lite->pageId,
                ];

                $sqlString = "
                SELECT *
                FROM ${1:session}s
                WHERE ".$this->dbCon->sqlParts($wheres, 'AND')."
                ";

                $${1:session}s = $this->dbCon->getRowsId($sqlString);

                // xStdFx::printPre(count($${1:session}s));
                // exit;

                $${1:session}Chunks = array_chunk($${1:session}s, 10, true);
                $${1:session}s = $${1:session}Chunks[$chunkIndex];

                foreach ($${1:session}s as $${1:session}Key => $${1:session}) {
                    $this->app->${2:sbSessions->sbSession}($${1:session}['id'])->checkoutProcessItemsNotify();
                }

                return [
                    'chunk_index'=>($chunkIndex + 1),
                    'progress'=>((($chunkIndex + 1) / count($${1:session}Chunks)) * 100),
                    'total'=>count($${1:session}Chunks),
                    'complete'=>($chunkIndex == count($${1:session}Chunks) -1),
                ];

            }$3"""

# Date functions
    'Date Create Database Format':
        'prefix':'dc'
        'body':"date_create(${1:$app->lite->site->nowDts})->format('${2:Y-m-d}')$3"
    'Date Create Visual Format':
        'prefix':'dcf'
        'body':"date_create(${1:$app->lite->site->nowDts})->format('${2:m/d/Y}')$3"
    'Date Modify':
        'prefix':'dcm'
        'body':"date_create(${1:$app->lite->site->nowDts})->modify('${2:+1 days}')->format('${3:Y-m-d}')$4"
    'Convert GMT Date':
        'prefix':'date_convert'
        'body':'$$1app->lite->site->dateConvert(${2:$user[\'created_gmt\']}${3:, \'dts\'})$4'
    'GMT Date Object':
        'prefix':'date_gmt_dateOb'
        'body':'$$1app->lite->gmt$2'
    'GMT Timestamp':
        'prefix':'date_gmt_timestamp'
        'body':'$$1app->lite->gmtDts$2'
    'Site Date Object':
        'prefix':'date_site_dateOb'
        'body':'$$1app->lite->site->date$2'
    'Site Timestamp':
        'prefix':'date_site_timestamp'
        'body':'$$1app->lite->site->date(\'dts\')$2'

# Formats
    'Money Format Number':
        'prefix':'money-format-number'
        'body': "'$'.number_format(${1:$product['price']}, ${2:2})$3"
    'Replace Spaces':
        'prefix':'replace_spaces'
        'body':"str_replace('${1: }', '${2:&nbsp;}', ${3:$user['name_first'].' '.$user['name_last']})"

# Functions and Methods
    'PHP Function':
        'prefix':'fn'
        'body': '####------------------------------------------------------------------------\n#### ${1:enumerate}\n#### NOTE: ${2:comments}\n####------------------------------------------------------------------------\n\npublic function ${1:enumerate}($3$pxOptions = array()) {\n\n\t${4:return $this->gets[\'${1:enumerate}\'] = $${1:enumerate};}\n\n}'
    'Set User in ini':
        'prefix':'user_ini'
        'body':'$1public function ini($pxMe, $pxUser = false) {\n\n\tif ($pxUser) {\n\t\t$this->id = intval($pxUser);\n\t\t$this->ob = $this->app->lite->site->sbUsers->sbUser($pxUser);\n\t} else {\n\t\t$this->id = $this->app->lite->user->id;\n\t\t$this->ob = $this->app->lite->user;\n\t}$2'
    'method':
        'prefix':'method'
        'body':'#### Start Method ---------------------------------------------\n$method = new xStdForm();\n$method->return = [\'${1:foundItemToProcess}\'=>${2:0}];\n\nreturn $method;$3\n'
    '$method->valid':
        'prefix':'valid'
        'body':'#### ${1:Validate} ---------------------------------------------\nif ($${2:method}->valid) {\n\n\t$3\n\n}'
    'Add Problem':
        'prefix':'prob'
        'body':'$method->addProb(\'$1\');$2'
    'Invalid Repsonse Print':
        'prefix':'invalid_print'
        'body':'if (!$response->valid) {\n\txStdFx::printPre($response);\n\texit;\n}$1'
    'Invalid Response':
        'prefix': 'invalid'
        'body':'if (!$response->valid) {\n\t$method->addProbs($response->probs);\n\treturn $method;\n}$1'
    'Rec Function':
        'prefix':'fnrec'
        'body':'####------------------------------------------------------------------------\n#### rec\n####------------------------------------------------------------------------\n\npublic function rec($pxOptions = array()) {\n\t\n\t$rec = new stdClass();\n\n\t$wheres = [];\n\n\t$wheres[] = " status < 90 ";\n\t$wheres[] = " site = ".$this->app->lite->siteId." ";\n\t$wheres[] = " page = ".$this->app->lite->pageId." ";\n\n\t$wheres[] = " id = ".$this->id." ";\n\n\t$sqlString = "\n\t\tSELECT *\n\t\tFROM ${1:instance_transactions}\n\t\tWHERE ".implode(\' AND \', $wheres)."\n\t\t";\n\n\n\t$rec->data = $this->dbCon->getRow($sqlString);\n\n\treturn $this->gets[\'rec\'] = $rec;\n\t\n}$2'
    'Replace Old Rec Function':
        'prefix':'fnrec_replace_old'
        'body':"""####-----------------------------------------------------------
            #### rec
            #### Add the sdbOld and scopeStringOld to App file
            #### remove the $this->rec from the ini and the `public $rec = false;`
            #### from this file
            ####-----------------------------------------------------------

            public function rec($pxOptions = array()) {

                $newRec = $this->app->sdb->record('${1:language_lesson_}'.$this->id, 'omni', $this->${2:lessons}->format);

                if (!$newRec->data['title']) {
                    $oldRec = $this->app->sdbOld->record('${1:language_lesson_}'.$this->id, 'omni', $this->${2:lessons}->format);


                    if ($oldRec->data['title']) {
                        $newRec->data = $oldRec->data;
                        $newRec->save();
                    }
                }

                return $this->gets['rec'] = $newRec;

            }$3
            """
    'For Each':
        'prefix':'fore'
        'body':'foreach (${1:$assignedGroups} as $${2:group}) {\n\t$3\n}'
    'For Each HTML':
        'prefix':'forp'
        'body':'foreach (${1:$assignedGroups} as $${2:group}) { $3?>\n\t$4\n<?php }'
    'xPage':
        'prefix':'xpage'
        'body': "$xPage->hashFrag('${1:document}','${2:documentid}')"
    'pxOptions isset':
        'prefix':'pxcheck'
        'body':"if (isset($pxOptions['${1:merchant}'])) {\n\t$wheres[] = \" ${1:${2:merchant}} = \".intval($pxOptions['${1:merchant}']).\" \";\n}$3"
    'Validate Input':
        'prefix':'validate-input'
        'body':"$method->validateInput('${1:Title}', ${2:$value}, ${3:required}, '${4:formatType}', ${5:maxLength});"

# Comments/Debugging
    'Comment Box':
        'prefix':'cb'
        'body':'#### -------------------------------------------------------\n#### $1\n#### $2\n#### $3\n#### -------------------------------------------------------$4\n'
    'PrintPre with Comment':
        'prefix':'xsp'
        'body': 'xStdFx::printPre([\'${1:comment}\', ${2:$sqlString}]);$3'
    'Break Comment':
        'prefix':'xsb'
        'body':'xStdFx::printPre(\'$1---------------------------------\');$2'
    'Current State':
        'prefix':'current_state'
        'body':"""xStdFx::printPre([
            'app_id'=>$app->id,
            'page_id'=>$app->lite->pageId,
            'site_id'=>$app->lite->siteId,
            'user_id'=>$app->lite->user->id,
        ]);"""
    'Temporary Code':
        'prefix':'temp'
        'body':'#### TEMP: $1 -------------------------------------------------------\n#### END TEMP -------------------------------------------------------\n'
    'Comment Line':
        'prefix':'cm'
        'body':'#### $1 -------------------------------------------------------'
    'Comment':
        'prefix':'c'
        'body':'#### '
    'PHP Console Log':
        'prefix':'log'
        'body':'?>\n\t<script type="text/javascript">\n\t\tconsole.log(JSON.stringify(<?php echo json_encode(${1:array_values(${2:$reminders})}); ?>, null, 4));\n\t</script>\n<?php$3'

# Standard Utilities
    'Multi-Line PHP':
        'prefix':'pp'
        'body':'<?php\n\t$1\n?>'
    'Inverted PHP Tags':
        'prefix':'hph'
        'body':'?>\n\t$1\n<?php'
    'Timeout Return':
        'prefix':'timeout'
        'body':"""if ((time() - $_SERVER['REQUEST_TIME']) > 30) {
            ${1:$this->finishRequest();}
        }$2"""
    'Microtime Timer':
        'prefix':'timer'
        'body':"""$start = microtime();
            xStdFx::printPre(microtime() - $start);
            exit;$1"""
    'Autoname':
        'prefix':'fn_autoname'
        'body':"""####------------------------------------------------------------------------
            #### autoName
            ####------------------------------------------------------------------------

            public function autoName($pxTitle, $pxOptions = array()) {

            	$i = 0;
                $nameRoot = strtolower(xStdFx::safeChars(strtolower($pxTitle), 'safename', '_'));

            	do {

            		if ($i==0) {
                        $nameTry = $nameRoot;
                    } else {
                        if ($i>20) {
                            $nameTry = $nameRoot.'_'.mt_rand(111111,999999);
                        } else {
                            $nameTry = $nameRoot.'_'.$i;
                        }
                    }

            		$sqlString = "
                    SELECT id
                    FROM
                    ${1:namespaces}
                    WHERE status < 90
                    AND site = ".$this->app->lite->siteId."
                    AND page = ".$this->app->lite->pageId."
                    AND name = '".$this->dbCon->esc($nameTry)."'
                    ";

                    $check = $this->dbCon->getRow($sqlString);

            		if (!$check) {
            			return $nameTry;
            		}
            		$i++;

            	} while ($check);

            }$2"""
    'Autoname Check':
        'prefix':'valid_autoname'
        'body':"""#### Auto name -------------------------------------------------------
            if ($method->valid) {

                if ($pxId) {
                    if (isset($results['name'])) {
                        $sqlString = "
                        SELECT id
                        FROM
                        ${1:namespaces}
                        WHERE status < 90
                        AND site = ".$this->app->lite->siteId."
                        AND page = ".$this->app->lite->pageId."
                        AND name = '".$this->dbCon->esc($results['name'])."'
                        AND id <> ".$pxId."
                        ";
                        $check = $this->dbCon->getRow($sqlString);
                        if ($check) {
                            $method->addProb('The name you have chosen is not available.');
                        }
                    }
                }

                if (!$pxId || !$this->sb${2:Namespace}($pxId)->rec->data['name']) {
                    if (isset($results['title'])) {
                        $results['name'] = $this->autoName($results['title']);
                        $method->return['name'] = $results['name'];
                    }
                }
            }$3"""

# Userlite Specific
    'App Info':
        'prefix':'appinfo'
        'body':"""xStdFx::printPre([
            'app_id'=>$$1app->id,
            'page_id'=>$$1app->lite->pageId,
            'site_id'=>$$1app->lite->siteId,
            'user_id'=>$$1app->lite->user->id,
        ]);$2"""
    'USL Return Query String':
        'prefix':'uslqs_return'
        'body':'window.location = \'/user/login?uslqs_return=\' + encodeURI(\'${1:/shopping/billing}\');$2'
    'Standard UL Function':
        'prefix':'xs'
        'body': 'xStdFx::${1:printPre}(${2:$sqlString})${3:;}$4'
    'PrintPre Exit':
        'prefix':'xx'
        'body': 'xStdFx::printPre(${1:$sqlString});\nexit;$2'
    'xReadyItems':
        'prefix':'xready'
        'body':"xReadyItems['${1:uniqueText}'] = function() {\n\t$2\n}"
    'UL Location':
        'prefix':'loc'
        'body':'${2://dev.userlite.com/apps/userlitestoreapps/${1:APPNAME}/v999/lib.htp}\n${3://app-${1:APPNAME}-v999.userlite.com/lib.htp}\n${4://dev.userlite.com/apps/userlitestoreapps/${1:APPNAME}/v999/api.htp}'
    'App Page Name':
            'prefix':'page_name'
            'body':'<?php echo $app->lite->pageName; ?>$1'
    'Rec Record Identifier':
        'prefix':'rec_record'
        'body':'$this->rec = $this->app->sdb->record(\'${1:user}_\'.$this->id, \'omni\', $this->${1:user}s->format);$2'
    'Rec Data':
        'prefix':'rec'
        'body': '$app->v->$1->rec->data$2'
    'hashFrag':
        'prefix':'hfrag'
        'body': "hFrag.xAjax('', 'mods/$1action.ajx?action=$2', '${3:xRec}', '$4');"
    'inc':
        'prefix':'inc'
        'body':'####------------------------------------------------------------\n#### ${1:category}\n####------------------------------------------------------------\nif ($xPage->hashFrag(\'${3:${1:category}}\',\'${1:category}id\')) {\n\n\t$app->v->${1:merchant} = $app->sb${2:Merchant}s->sb${2:Merchant}($xPage->hashFrag(\'${3:${1:category}}\',\'${1:category}id\'));\n\n}$4'
    'IAX Instance':
        'prefix':'iax'
        'body':"""// Create a new App Instance
            $iax = new x${1:Training}App('userlite', [
            	'lite_scope'=>[
            		'site'=>$${2:record}['site'],
            		'page'=>$${2:record}['page'],
            	]
            ]);
            ${3:
            // Set the current user for the IAX
            $iax->lite->site->sbUsers->forceCurrent = $${2:record}['user'];}$4"""
    'Force Current User':
        'prefix':'force_current'
        'body':'$iax->lite->site->sbUsers->forceCurrent = $${1:record}[\'user\'];$2'
    'Trik Index File':
        'prefix':'trik_index'
        'body':'<?php\n\n\t#header(\'Access-Control-Allow-Origin: *\');\n\n\t#### Start Time ---------------------------------------------\n\t$timerStart = microtime(true);\n\n\t#### Response ---------------------------------------------\n\t$trikResponse = array(\n\t\t\'status\'=>\'ok\',\n\t\t\'return\'=>30,\n\t\t\'processTime\'=>0,\n\t\t\'statusMessage\'=>\'\',\n\t);\n\n\trequire_once $xPage->sub[1].\'.php\';\n\n\t#### Duration ---------------------------------------------\n\t$duration = microtime(true) - $timerStart;\n\t$trikResponse[\'processTime\'] = intval($duration * 1000);\n\n\n\t#### Return ---------------------------------------------\n\theader(\'Content-type: application/json\');\n\techo json_encode($trikResponse);\n'
    'Trik Base File':
        'prefix':'trik_base'
        'body':"""<?php
            // https://dev.userlite.com/apps/userlitestoreapps/${1:xrshopping}/v999/${2:healthplan/processMonthlyHealthplans}.htp

            #### Process ---------------------------------------------
            $response = $app->sbProcess->${3:monthlyHealthPlans}();

            if ($response->valid) {
            	$trikResponse['status'] = 'ok';
            	if ($response->return['foundItemToProcess']) {
            		// header('Refresh: 0;');
            		$trikResponse['return'] = 5;
            		$trikResponse['statusMessage'] = 'Found item to process: '.$response->return['foundItemToProcess'].'';
            	} else {
            		$trikResponse['return'] = 600;
            		$trikResponse['statusMessage'] = 'All is well.';
            	}
            } else {
            	$trikResponse['status'] = 'error';
            	$trikResponse['return'] = 60;
            	$trikResponse['statusMessage'] = implode('; ', $response->probs);
            }
            """
    'Trik Method':
        'prefix':'fn_trik'
        'body':"""####-----------------------------------------------------------
        	#### ${1:updateExpiredDealers}
        	####-----------------------------------------------------------

        	public function ${1:updateExpiredDealers}($pxOptions = array()) {

        	    #### Start Method ---------------------------------------------
        	    $method = new xStdForm();

        	    #### Find an ${2:dealer} to process ---------------------------------------------
        	    if ($method->valid) {

        	        $wheres = [
        	            'status'=>1,$5
        	        ];

        	        $sqlString = "
        	        SELECT id, site, page
        	        FROM ${2:dealer}s
        			WHERE ".$this->dbCon->sqlParts($wheres, 'AND')."
        	        ORDER BY updated ASC
        	        LIMIT 1
        	        ";

        	        $${2:dealer} = $this->dbCon->getRow($sqlString);

        			if (!$${2:dealer}) return $method;

        			$method->return = ['foundItemToProcess'=>$${2:dealer}['id']];

        	    }

        	    #### Update ${3:Dealer} ---------------------------------------------
        	    if ($method->valid) {

        	        if ($${2:dealer}) {

        				// Create a new App Instance
        				$iax = new x${4:Sellerz}App('userlite', [
        					'lite_scope'=>[
        						'site'=>$${2:dealer}['site'],
        						'page'=>$${2:dealer}['page'],
        					]
        				]);

        				// Set the current user for the IAX
        				$iax->lite->site->sbUsers->forceCurrent = $${2:dealer}['user'];

        	            $${2:dealer}Ob = $iax->sb${3:Dealer}s->sb${3:Dealer}($${2:dealer}['id']);

        	        }

        	    }

        	    return $method;

        	}
            """
    'Tiny Sort':
        'prefix':'tinysort'
        'body':"var curSort = 'asc';\n\nfunction sortCols(pxBy) {\n\n\ttinysort('tr.dataRow', {\n\t\tselector: pxBy,\n\t\torder: curSort\n\t});\n\n\tif (curSort == 'asc') {\n\t\tcurSort = 'desc';\n\t} else {\n\t\tcurSort = 'asc';\n\t}\n}${1: onclick=\"sortCols('.category');\"}"
    'Activity':
        'prefix':'activity'
        'body':"####----------------------------------------------------------------------------\n#### activity\n####----------------------------------------------------------------------------\n\npublic function activity($pxOptions = array()) {\n\n\treturn $this->app->lite->site->sbActivities->sbActivity(\n\t\t[\n\t\t\t'page'=>$this->app->lite->pageId,\n\t\t\t'app'=>$this->app->id,\n\t\t\t'name'=>'${1:action}',\n\t\t\t'id'=>$this->id,\n\t\t]\n\n\t);\n\n}$2"
    'Notebook':
        'prefix':'notebook'
        'body':"####----------------------------------------------------------------------------\n#### notebook\n####----------------------------------------------------------------------------\n\npublic function notebook($pxOptions = array()) {\n\n\treturn $this->app->lite->site->sbNotebooks->sbNotebook(\n\t\t$this->app->lite->pageId,\n\t\t$this->app->lite->appId,\n\t\t'main',\n\t\t'${1:document}',\n\t\t$this->id,\n\t\t$this->rec->data['title'],\n\t\t[\n\t\t\t'parent'=>$this,\n\t\t\t'syncfields'=>[\n\t\t\t\t'title'=>$this->rec->data['title'],\n\t\t\t\t'hfrag'=>'${2:hashFrag}${3:'.$this->id.'}',\n\t\t\t\t'sec_name'=>'${4:${5:app}}',\n\t\t\t\t'sec_id'=>'${4:${6:full}}',\n\t\t\t\t'sec_action'=>'${4:${7:manage}}',\n\t\t\t],\n\t\t]\n\t);\n\n}$8"
    'Notebook Activity':
        'prefix':'notebookactivity'
        'body':"####----------------------------------------------------------------------------\n#### notebookActivity\n####----------------------------------------------------------------------------\n\npublic function notebookActivity($pxOptions = array()) {\n\n\treturn $this->app->lite->sbNotebooks->sbOb(\n\t\t$this->notebook,\n\t\t[\n\t\t\t'go'=>'${1:client/goal_activity}',\n\t\t],\n\t\t[\n\t\t\t'xlog_name_prefix'=>'activity',\n\t\t\t'xlog_title_prefix'=>'Activity',\n\t\t]\n\t);\n\n}$2"
    'Notebook Entry':
        'prefix':'entry'
        'body':"$entryOptions =   [\n\t'type'=>1,\n\t'user'=>${1:$results['user']},\n\t'comment'=>${2:$this->rec->data['title'].' document signed by '.$this->user->displayName},\n\t'uid'=>'${3:xAppObjectName}_'.${4:$this->id.'_user_'.$this->user->id}.'_initial',\n\t'activity_name'=>$this->${5:parent}->activity->ref['name'],\n\t'activity_id'=>$this->${5:parent}->activity->ref['id'],\n\t'importance'=>5,\n];\n\n$this->app->lite->site->sbUsers->sbUser($results['user'])->contactNotebook->sbEntries->create(\n\t$entryOptions\n);$6"
    'Notebook Page':
        'prefix':'notebook_page'
        'body':'echo $app->v->${1:merchant}->notebookActivity->page();$2'
    'Activity Go':
        'prefix':'activity_go'
        'body':'echo $app->v->${1:merchant}->notebookActivity->go();$2'
    'Email Body':
        'prefix':'bod'
        'body':"$body .= '${1:Message} ${2:<br>}<br>';$3";
    'Send Email':
        'prefix':'email'
        'body':'\n\t$body = \'<div style="@box; @backWhite; @font; @sec;">\';\n\t$body .= \'<div style="@box; @backWhite; @font; @secIn;">\';\n\t$body .= ${1:\'Hey \'.$user[\'name\'].\',\'};\n\t$body .= \'<br><br>\';\n\t$2\n\t$body .= \'</div>\';\n\t$body .= \'</div>\';\n\n\t$emailArray = [\n\t\t\'to\'=>${3:$user[\'email\']},\n\t\t\'subject\'=>$4,\n\t\t\'bodyHtml\'=>$body,\n\t\t\'bcc\'=>[\'${5:something}@cnxmsg.com\'],\n\t];\n\n\t$response = $this->app->lite->site->mx->send($emailArray);\n\n\tif (!$response->valid) {\n\t\t$method->addProbs($response->probs);\n\t\treturn $method;\n\t}$6'
    'CDN Image':
        'prefix':'cdnimage'
        'body':"echo $app->lite->cdnImage(${1:'_bw/user.png'}, '${2:maxD_100}');$3"
    'Get Cache':
        'prefix':'cache_get'
        'body':"$cName = '${1:xCashAppUsersUser}_v1_'.${2:$this->id}.'_${3:account_access}';\n$${4:accounts} = $this->app->lite->site->point->get($cName);$5"
    'Set Cache':
        'prefix':'cache_set'
        'body':"$cName = '${1:xCashAppUsersUser}_v1_'.${2:$this->id}.'_${3:account_access}';\n$this->app->lite->site->point->set($cName, $accounts);$4"
